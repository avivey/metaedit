metaedit
========

Let say you have a Github repository which is a collection of computer-readable
content, which may be hand-curated; A frequent task is "Make small change to one
file, make pull request, and make sure you got the syntax right".
metaedit is here to let you do that quickly, while taking care of the syntax for
you, and - as a bonus - skip the whole part about forking, pulling, pushing and
git-ing while it's here.

metaedit is running 100% in your browser. Your edits are done directly on your
personal Github fork of the target repository (Which metaedit will manage for
you).
Your changes are done in a dedicated editor, optimized* for the task at hand; No
fiddling with correct indentation or an extra colon. The editor will* make sure
you've got right fields and didn't misspell anything important.

It's also modular*, so you can adapt it to your editor and your repository.

Ideally, metaedit would allow compleatly non-technical users to make changes to
such repositories, without hand-holding from a maintainer. For this reason,
terminology is a little different form git/Github world - it's meant to be more
accessible to people that never faced "version control" before, or even "files".

* That's the plan; See `Status' below.

Status:
-------
I consider this to be somewhere between a tech-demo and an MVP (Minimal Viable
Product): It can be used for what it's meant for, but just barely.
Interfaces will change much, and some basic features are still missing.
Code is mostly a horrible mess. UX is an after-thought.

Usage:
------
- New project is always branched of `master`. Either pick a name before
  starting, or when saving first file.
- So you can actually browse stuff before you start editing.
- You can update `master` with the upstream with a single click.


Build / Develop:
----------------
metaedit runs in a browser. It does need to be served over http(s), but requires
only to be served as static content.
There are some node.js dependencies that needs to be collected, minified and
served. They are:

- js-git
- js-github
- gen-run
- json-stable-stringify

And in order to package them, you'll also need nodejs itself, and
- browserify
- minify

then run dependencies.sh to generate the bundle.

License:
--------
MIT.

Used and included libs:
-----------------------
- js-git, js-github, gen-run from https://github.com/creationix/ (MIT license)
- https://github.com/jdorn/json-editor (MIT)
- https://www.npmjs.com/package/json-stable-stringify (MIT)
- https://github.com/substack/node-browserify (MIT)
- https://github.com/google/traceur-compiler (Apache license)
- Favicon is from http://tango.freedesktop.org/
